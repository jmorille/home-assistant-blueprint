blueprint:
  name: Aqara TRV E1 external temperature
  description: >
    Configures the Aqara TRV to receive it's temperature from an external sensor.
    Every time the temperature & door sensor value changes it's is send to the TRV.
  domain: automation
  source_url: "https://github.com/jmorille/home-assistant-blueprint/z2m_aqara_trv_external_temperature.yaml"
  input:
    external_temp_sensor:
      name: External temperature sensor
      description: This temperature sensor values will be synced to the TRV
      selector:
        entity:
          multiple: true
          filter:
            domain: sensor
            device_class:
              - temperature
    external_contact_sensor:
      name: External contact sensor
      description: Doors Contact sensor values will shut off the TRV
      selector:
        entity:
          multiple: true
          filter:
            domain: binary_sensor
            device_class:
              - door
    aqara_trv_device:
      name: The Aqara TRV
      description: The TRV that the temperature willl be set to
      selector:
        device:
          multiple: false
          filter:
            - integration: mqtt
              manufacturer: Xiaomi
              model: Aqara Smart Radiator Thermostat E1 (SRTS-A01)

mode: restart
max_exceeded: silent

variables:
  aqara_trv_device: !input aqara_trv_device
  external_temp_sensor: !input external_temp_sensor
  external_contact_sensor: !input external_contact_sensor

trigger:
  - platform: state
    entity_id: !input external_temp_sensor
    id: temp-change
  - platform: state
    entity_id: !input external_contact_sensor
    to: "on"
    id: window-open
  - platform: state
    entity_id: !input external_contact_sensor
    to: "off"
    id: window-close
action:
  - variables:
      aqara_trv_device_name: "{{ device_attr(aqara_trv_device, 'name') }}"
      aqara_trv_select_entity: >-
        {% set device_entities = device_entities(aqara_trv_device) %}
        {{ expand(device_entities)
                  | selectattr('attributes.options', 'contains', 'external')
                  | map(attribute='entity_id') 
                  | first
        }}
      aqara_trv_climate_entity: >-
        {% set device_entities = device_entities(aqara_trv_device) %}
        {{ expand(device_entities)
                  | selectattr('attributes.hvac_modes', 'contains', 'off')
                  | map(attribute='entity_id') 
                  | first
        }} 
      aqara_compute_temperature_min: >-
        {{ expand(external_temp_sensor)  | map(attribute='state') | map('float') | min }}
      aqara_compute_temperature_max: >-
        {{ expand(external_temp_sensor)  | map(attribute='state') | map('float') | max }}
      aqara_compute_temperature: >-
        {{ expand(external_temp_sensor)  | map(attribute='state') | map('float') | max }}
  - parallel:
      - if:
          - condition: or
            conditions: 
              - condition: trigger
                id:
                  - temp-change
              - condition: trigger
                id:
                  - window-close
              - condition: trigger
                id:
                  - window-open
        then:
          - if:
              - condition: template
                value_template: "{{ not is_state(aqara_trv_select_entity, 'external')}}"
            then:
              - service: select.select_option
                target:
                  entity_id: "{{aqara_trv_select_entity}}"
                data:
                  option: external
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0        
          - service: mqtt.publish
            data:
              topic: "zigbee2mqtt/{{aqara_trv_device_name}}/set/sensor_temp"
              payload_template: >-
                 {{ aqara_compute_temperature | float }}
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - window-open
            sequence:
              - service: climate.turn_off
                target:
                  entity_id: "{{aqara_trv_climate_entity}}"
                data: {}
          - conditions:
              - condition: and
                conditions:
                  - condition: trigger
                    id:
                      - window-close
                  - condition: template
                    value_template: >-
                      {{ expand(external_contact_sensor) |  selectattr('state', 'eq', 'on')  | list | count == 0 }}
            sequence:
              - service: climate.turn_on
                target:
                  entity_id: "{{aqara_trv_climate_entity}}"
                data: {}
